{"version":3,"file":"reapop.cjs.production.min.js","sources":["../src/constants.ts","../src/contexts/componentsContext.ts","../src/contexts/themeContext.ts","../src/hooks/useTheme.ts","../src/utils.ts","../src/hooks/useComponentsContext.ts","../src/components/SlideTransition.tsx","../src/components/NotificationIcon.tsx","../src/components/NotificationDismissIcon.tsx","../src/components/NotificationButton.tsx","../src/components/NotificationImage.tsx","../src/components/Notification.tsx","../src/components/NotificationContainer.tsx","../src/components/NotificationsContainer.tsx","../src/components/NotificationsSystem.tsx","../src/reducers/notifications/constants.ts","../src/reducers/notifications/reducer.ts","../src/services/notifications.ts","../src/reducers/notifications/actions.ts","../src/contexts/reapopNotificationsContext.ts","../src/components/NotificationsProvider.tsx","../src/components/FadeTransition.tsx","../src/components/GrowTransition.tsx","../src/hooks/useNotifications.ts","../src/themes/base.ts","../src/themes/atalho.ts","../src/themes/wybo.ts","../src/themes/bootstrap.ts","../src/index.ts"],"sourcesContent":["import {NewNotification, Notification, Position} from './reducers/notifications/types'\n\nexport type NotificationConfig = {\n    defaultProps: Partial<Notification>\n    customizeNotification: ((notification: NewNotification) => void) | null\n    generateId: ((notification: NewNotification) => string) | null\n}\n\nexport const CONFIG: NotificationConfig = {\n    defaultProps: {},\n    customizeNotification: null,\n    generateId: null,\n}\n\nexport const STATUSES: {\n    none: 'none'\n    info: 'info'\n    success: 'success'\n    loading: 'loading'\n    warning: 'warning'\n    error: 'error'\n} = Object.freeze({\n    none: 'none',\n    info: 'info',\n    success: 'success',\n    loading: 'loading',\n    warning: 'warning',\n    error: 'error',\n})\n\nexport const POSITIONS: {\n    topCenter: 'top-center'\n    topLeft: 'top-left'\n    topRight: 'top-right'\n    bottomCenter: 'bottom-center'\n    bottomLeft: 'bottom-left'\n    bottomRight: 'bottom-right'\n} = Object.freeze({\n    topCenter: 'top-center',\n    topLeft: 'top-left',\n    topRight: 'top-right',\n    bottomCenter: 'bottom-center',\n    bottomLeft: 'bottom-left',\n    bottomRight: 'bottom-right',\n})\n\nconst classnamePrefix = 'reapop__'\n\nexport const classnames = {\n    container: (position: Position, singleContainer: boolean) => {\n        const classes = [`${classnamePrefix}container`, `${classnamePrefix}container--${position}`]\n        if (singleContainer) {\n            classes.push(`${classnamePrefix}container--single`)\n        }\n        return classes\n    },\n    notification: (notification: Notification) => [\n        `${classnamePrefix}notification`,\n        `${classnamePrefix}notification--${notification.status}`,\n        `${classnamePrefix}notification--buttons-${notification.buttons.length}`,\n        notification.dismissible ? `${classnamePrefix}notification--dismissible` : '',\n    ],\n    notificationIcon: `${classnamePrefix}notification-icon`,\n    notificationImageContainer: `${classnamePrefix}notification-image-container`,\n    notificationImage: `${classnamePrefix}notification-image`,\n    notificationDismissIcon: `${classnamePrefix}notification-dismiss-icon`,\n    notificationMeta: `${classnamePrefix}notification-meta`,\n    notificationTitle: `${classnamePrefix}notification-title`,\n    notificationMessage: `${classnamePrefix}notification-message`,\n    notificationButtons: `${classnamePrefix}notification-buttons`,\n    notificationButton: `${classnamePrefix}notification-button`,\n    notificationButtonText: `${classnamePrefix}notification-button-text`,\n}\n","import {createContext} from 'react'\nimport NotificationIcon from '../components/NotificationIcon'\nimport Notification from '../components/Notification'\nimport SlideTransition from '../components/SlideTransition'\nimport GrowTransition from '../components/GrowTransition'\nimport FadeTransition from '../components/FadeTransition'\n\nexport type ComponentContextType = {\n    Transition?: typeof SlideTransition | typeof GrowTransition | typeof FadeTransition\n    NotificationIcon?: typeof NotificationIcon\n    Notification?: typeof Notification\n}\n\nexport const ComponentsContext = createContext<ComponentContextType>({})\n","import {createContext} from 'react'\nimport {Theme} from '..'\n\nexport const ThemeContext = createContext<Theme | undefined>(undefined)\n","import {ThemeContext} from '../contexts/themeContext'\nimport {useContext} from 'react'\n\nexport const useTheme = () => useContext(ThemeContext)\n","type TimeoutId = ReturnType<typeof setTimeout>\n\nexport class Timer {\n    private timerId: TimeoutId | undefined\n    private start: Date | undefined\n    private callback: (...args: any[]) => any\n    remainingTime: number\n\n    constructor(delay: number, callback: (...args: any[]) => any) {\n        this.remainingTime = delay\n        this.callback = callback\n    }\n\n    pause() {\n        clearTimeout(<TimeoutId>this.timerId)\n        this.remainingTime -= new Date().getTime() - (<Date>this.start).getTime()\n    }\n\n    resume() {\n        this.start = new Date()\n        clearTimeout(<TimeoutId>this.timerId)\n        this.timerId = setTimeout(this.callback, this.remainingTime)\n    }\n}\n\nexport const clone = <T extends unknown>(origObject: T): T => {\n    if (typeof origObject !== 'object' || origObject === null) {\n        return origObject\n    }\n\n    if (Array.isArray(origObject)) {\n        return origObject.map((value) => clone(value)) as T\n    }\n\n    const newObject: Record<string, unknown> = {}\n    for (const key in origObject) {\n        newObject[key] = clone((origObject as Record<string, unknown>)[key])\n    }\n\n    return newObject as T\n}\n\nexport const isObject = (value: unknown) => !!value && (value as any).constructor === Object\n\nexport const noop = () => {\n    // noop\n}\n","import {useContext} from 'react'\nimport {ComponentsContext} from '../contexts/componentsContext'\n\nexport const useComponentsContext = () => {\n    return useContext(ComponentsContext)\n}\n","import {Transition} from 'react-transition-group'\nimport React, {RefObject} from 'react'\nimport {POSITIONS} from '../constants'\nimport {Notification} from '../reducers/notifications/types'\nimport {TransitionProps} from 'react-transition-group/Transition'\n\ntype Props = {\n    notification: Notification\n    duration?: number\n} & Omit<TransitionProps<HTMLElement>, 'addEndListener'>\n\nconst SlideTransition = (props: Props) => {\n    const duration = props.duration || 300\n    const colapseAnimationDuration = 250\n    const {children, notification, nodeRef, ...otherProps} = props\n    const getNode = () => (nodeRef as RefObject<HTMLElement>).current as HTMLElement\n    const transformDirection = ([POSITIONS.topCenter, POSITIONS.bottomCenter] as string[]).includes(\n        notification.position\n    )\n        ? 'translateY'\n        : 'translateX'\n    const transformValue = ([POSITIONS.topCenter, POSITIONS.topLeft, POSITIONS.bottomLeft] as string[]).includes(\n        notification.position\n    )\n        ? '-100%'\n        : '100%'\n\n    // eslint-disable-next-line no-undef\n    const animationProps: KeyframeAnimationOptions = {\n        fill: 'forwards',\n        duration,\n    }\n    const onEnter = () => {\n        getNode().animate(\n            [\n                {transform: `${transformDirection}(${transformValue})`, opacity: 0},\n                {transform: `${transformDirection}(0)`, opacity: 1},\n            ],\n            animationProps\n        )\n    }\n    const onExit = () => {\n        const hideAnimationDuration = duration\n        getNode().animate([{transform: `${transformDirection}(${transformValue})`, opacity: 0}], animationProps)\n        setTimeout(() => {\n            // `150px`: A value higher than the height a notification can have\n            // to create a smooth animation for displayed notifications\n            // when a notification is removed from a container.\n            getNode().animate([{maxHeight: '150px'}, {margin: 0, maxHeight: 0}], {\n                ...animationProps,\n                duration: colapseAnimationDuration,\n            })\n        }, hideAnimationDuration)\n    }\n\n    return (\n        <Transition\n            nodeRef={nodeRef}\n            onEnter={onEnter}\n            onExit={onExit}\n            timeout={duration + colapseAnimationDuration}\n            {...otherProps}\n        >\n            {children}\n        </Transition>\n    )\n}\n\nexport default SlideTransition\n","import React from 'react'\n\nimport {Notification} from '../reducers/notifications/types'\nimport {classnames, STATUSES} from '../constants'\nimport {Theme} from '..'\n\ntype Props = {\n    notification: Notification\n    theme?: Theme\n}\n\nconst NotificationIcon = (props: Props) => {\n    const {theme} = props\n    const {status} = props.notification\n    const styles = theme ? theme.notificationIcon(props.notification) : {}\n    const iconProps = {\n        style: styles,\n        className: classnames.notificationDismissIcon,\n    }\n\n    switch (status) {\n        case STATUSES.none:\n            return null\n        case STATUSES.info:\n            return (\n                <svg viewBox=\"0 0 16 16\" fill=\"currentColor\" {...iconProps}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412l-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM8 5.5a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\"\n                    />\n                </svg>\n            )\n        case STATUSES.loading:\n            return (\n                <svg viewBox=\"5 5 40 40\" fill=\"currentColor\" {...iconProps}>\n                    <path d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\n                        <animateTransform\n                            attributeType=\"xml\"\n                            attributeName=\"transform\"\n                            type=\"rotate\"\n                            from=\"0 25 25\"\n                            to=\"360 25 25\"\n                            dur=\"0.5s\"\n                            repeatCount=\"indefinite\"\n                        />\n                    </path>\n                </svg>\n            )\n        case STATUSES.success:\n            return (\n                <svg viewBox=\"0 0 16 16\" fill=\"currentColor\" {...iconProps}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\"\n                    />\n                </svg>\n            )\n        case STATUSES.warning:\n            return (\n                <svg viewBox=\"0 0 16 16\" fill=\"currentColor\" {...iconProps}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 5zm.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2z\"\n                    />\n                </svg>\n            )\n        case STATUSES.error:\n            return (\n                <svg viewBox=\"0 0 16 16\" fill=\"currentColor\" {...iconProps}>\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M11.46.146A.5.5 0 0 0 11.107 0H4.893a.5.5 0 0 0-.353.146L.146 4.54A.5.5 0 0 0 0 4.893v6.214a.5.5 0 0 0 .146.353l4.394 4.394a.5.5 0 0 0 .353.146h6.214a.5.5 0 0 0 .353-.146l4.394-4.394a.5.5 0 0 0 .146-.353V4.893a.5.5 0 0 0-.146-.353L11.46.146zm-6.106 4.5a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\"\n                    />\n                </svg>\n            )\n    }\n}\n\nexport default NotificationIcon\n","import React, {SyntheticEvent} from 'react'\nimport {Notification} from '../reducers/notifications/types'\nimport {Theme} from '../themes/types'\nimport {classnames} from '../constants'\n\ntype Props = {\n    notification: Notification\n    theme?: Theme\n    dismissNotification: (event: SyntheticEvent) => void\n}\n\nconst NotificationDismissIcon = (props: Props) => {\n    const {theme, notification, dismissNotification} = props\n    const styles = theme ? theme.notificationDismissIcon(notification) : {}\n    return (\n        <svg\n            className={classnames.notificationDismissIcon}\n            style={styles}\n            onClick={dismissNotification}\n            viewBox=\"4 4 8 8\"\n            fill=\"currentColor\"\n            data-testid=\"dismiss-icon\"\n        >\n            <path\n                fillRule=\"evenodd\"\n                d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"\n            />\n        </svg>\n    )\n}\n\nexport default NotificationDismissIcon\n","import React, {useState} from 'react'\nimport {Notification, NotificationButton as ButtonType} from '../reducers/notifications/types'\nimport {Theme} from '../themes/types'\nimport {classnames} from '../constants'\nimport {noop} from '../utils'\n\ntype Props = {\n    button: ButtonType\n    position: number\n    notification: Notification\n    theme?: Theme\n}\n\nexport const NotificationButton = (props: Props) => {\n    const {notification, theme, position, button} = props\n    const [isHovered, setIsHovered] = useState(false)\n    const [isActive, setIsActive] = useState(false)\n    const state = {isHovered, isActive}\n    const buttonStyles = theme ? theme.notificationButton(notification, position, state) : {}\n    const buttonTextStyles = theme ? theme.notificationButtonText(notification, position, state) : {}\n\n    return (\n        <button\n            data-testid=\"button\"\n            style={buttonStyles}\n            className={classnames.notificationButton}\n            onMouseLeave={() => setIsHovered(false)}\n            onMouseEnter={() => setIsHovered(true)}\n            onMouseDown={() => setIsActive(true)}\n            onMouseUp={() => setIsActive(false)}\n            onClick={typeof button.onClick === 'function' ? () => button.onClick!() : noop}\n        >\n            <span className={classnames.notificationButtonText} style={buttonTextStyles}>\n                {button.primary ? <b>{button.name}</b> : button.name}\n            </span>\n        </button>\n    )\n}\n\nexport default NotificationButton\n","import React from 'react'\nimport {Notification} from '..'\nimport {classnames} from '../constants'\nimport {useTheme} from '../hooks/useTheme'\n\ntype Props = {\n    notification: Notification\n}\n\nconst NotificationImage = (props: Props) => {\n    const {notification} = props\n    const theme = useTheme()\n    const containerStyles = theme ? theme.notificationImageContainer(notification) : {}\n    const imageStyles = theme ? theme.notificationImage(notification) : {}\n\n    return (\n        <div className={classnames.notificationImageContainer} style={containerStyles}>\n            <span\n                className={classnames.notificationImage}\n                style={{\n                    ...imageStyles,\n                    ...{backgroundImage: `url(${notification.image as string})`},\n                }}\n            />\n        </div>\n    )\n}\n\nexport default NotificationImage\n","import React from 'react'\n\nimport {Notification as NotificationType} from '../reducers/notifications/types'\nimport {classnames} from '../constants'\nimport {ComponentContextType} from '../contexts/componentsContext'\nimport {Theme} from '..'\n\nimport {DismissNotification} from './NotificationsSystem'\nimport NotificationIcon from './NotificationIcon'\nimport NotificationDismissIcon from './NotificationDismissIcon'\nimport NotificationButton from './NotificationButton'\nimport NotificationImage from './NotificationImage'\n\ntype Props = {\n    notification: NotificationType\n    dismissNotification: DismissNotification\n    components: ComponentContextType\n    theme?: Theme\n}\n\nconst Notification = (props: Props) => {\n    const {notification, dismissNotification: dismiss, theme, components} = props\n    const {id, title, message, dismissible, showDismissButton, buttons, allowHTML, image} = notification\n    const wrapperClassname = classnames.notification(notification)\n    const wrapperStyles = theme ? theme.notification(notification) : {}\n    const metaStyles = theme ? theme.notificationMeta(notification) : {}\n    const titleStyles = theme ? theme.notificationTitle(notification) : {}\n    const messageStyles = theme ? theme.notificationMessage(notification) : {}\n    const Icon = components.NotificationIcon || NotificationIcon\n    const dismissNotification = () => dismiss(id)\n\n    return (\n        <div\n            data-testid=\"notification\"\n            role=\"alert\"\n            style={wrapperStyles}\n            className={wrapperClassname.join(' ')}\n            onClick={dismissible && !showDismissButton ? dismissNotification : undefined}\n        >\n            <Icon theme={theme} notification={notification} />\n            {image && <NotificationImage notification={notification} />}\n            <div style={metaStyles} className={classnames.notificationMeta}>\n                {title &&\n                    (allowHTML ? (\n                        <h4\n                            style={titleStyles}\n                            className={classnames.notificationTitle}\n                            dangerouslySetInnerHTML={{__html: title}}\n                        />\n                    ) : (\n                        <h4 style={titleStyles} className={classnames.notificationTitle}>\n                            {title}\n                        </h4>\n                    ))}\n                {message &&\n                    (allowHTML ? (\n                        <p\n                            style={messageStyles}\n                            className={classnames.notificationMessage}\n                            dangerouslySetInnerHTML={{__html: message}}\n                        />\n                    ) : (\n                        <p style={messageStyles} className={classnames.notificationMessage}>\n                            {message}\n                        </p>\n                    ))}\n            </div>\n            {dismissible && showDismissButton && (\n                <NotificationDismissIcon\n                    notification={notification}\n                    theme={theme}\n                    dismissNotification={dismissNotification}\n                />\n            )}\n            {buttons.length ? (\n                <div onClick={dismissNotification} className={classnames.notificationButtons}>\n                    {buttons.map((button, index) => (\n                        <NotificationButton\n                            key={button.name}\n                            position={index}\n                            button={button}\n                            notification={notification}\n                            theme={theme}\n                        />\n                    ))}\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nexport default Notification\n","import React, {useEffect, useRef, useState} from 'react'\nimport {Timer} from '../utils'\nimport {Notification as NotificationType} from '../reducers/notifications/types'\nimport {DismissNotification} from './NotificationsSystem'\nimport {useComponentsContext} from '../hooks/useComponentsContext'\nimport SlideTransition from './SlideTransition'\nimport {useTheme} from '../hooks/useTheme'\nimport NotificationComponent from './Notification'\nimport {TransitionProps} from 'react-transition-group/Transition'\n\ntype Props = {\n    notification: NotificationType\n    dismissNotification: DismissNotification\n} & Omit<TransitionProps, 'addEndListener'>\n\nconst NotificationContainer = (props: Props) => {\n    const {notification, dismissNotification, ...transitionProps} = props\n    const {dismissAfter, onAdd, onDismiss} = notification\n    const components = useComponentsContext()\n    const theme = useTheme()\n    const Transition = components.Transition || SlideTransition\n    const Notification = components.Notification || NotificationComponent\n    const [timer, setTimer] = useState<Timer | null>(null)\n    const nodeRef = useRef(null)\n\n    useEffect(() => {\n        if (onAdd) {\n            onAdd()\n        }\n        return () => {\n            if (onDismiss) {\n                onDismiss()\n            }\n        }\n    }, [])\n\n    useEffect(() => {\n        if (!timer && dismissAfter && dismissAfter > 0) {\n            const timer = new Timer(dismissAfter, () => dismissNotification(notification.id))\n            timer.resume()\n            setTimer(timer)\n        } else if (timer && !dismissAfter) {\n            timer.pause()\n            setTimer(null)\n        }\n    }, [dismissAfter])\n\n    return (\n        <Transition notification={notification} nodeRef={nodeRef} {...transitionProps}>\n            <div\n                ref={nodeRef}\n                data-testid=\"timed-notification\"\n                onMouseEnter={timer ? () => timer.pause() : undefined}\n                onMouseLeave={timer ? () => timer.resume() : undefined}\n            >\n                <Notification\n                    notification={notification}\n                    theme={theme}\n                    dismissNotification={() => dismissNotification(notification.id)}\n                    components={components}\n                />\n            </div>\n        </Transition>\n    )\n}\n\nexport default NotificationContainer\n","import React from 'react'\nimport {Notification as NotificationType, Position} from '../reducers/notifications/types'\nimport {classnames, POSITIONS} from '../constants'\nimport {useTheme} from '../hooks/useTheme'\nimport NotificationContainer from './NotificationContainer'\nimport {DismissNotification} from './NotificationsSystem'\nimport {TransitionGroup} from 'react-transition-group'\n\ntype Props = {\n    notifications: NotificationType[]\n    position: Position\n    dismissNotification: DismissNotification\n    singleContainer: boolean\n}\n\nconst NotificationsContainer = (props: Props) => {\n    const {position, dismissNotification, singleContainer} = props\n    const theme = useTheme()\n    const styles = theme ? theme.container(position, singleContainer) : {}\n    const classname = classnames.container(position, singleContainer)\n    let {notifications} = props\n\n    // when notifications are displayed at the bottom,\n    // we display notifications from bottom to top\n    if (([POSITIONS.bottomRight, POSITIONS.bottomCenter, POSITIONS.bottomLeft] as string[]).includes(position)) {\n        notifications = notifications.slice().reverse()\n    }\n\n    return (\n        <div style={styles} className={classname.join(' ')}>\n            <TransitionGroup component={null}>\n                {notifications.map((notification) => (\n                    <NotificationContainer\n                        key={notification.id}\n                        notification={notification}\n                        dismissNotification={dismissNotification}\n                    />\n                ))}\n            </TransitionGroup>\n        </div>\n    )\n}\n\nexport default NotificationsContainer\n","import React, {useEffect, useState} from 'react'\nimport {POSITIONS} from '../constants'\nimport {Notification} from '../reducers/notifications/types'\nimport {Theme} from '../themes/types'\nimport {ComponentContextType, ComponentsContext} from '../contexts/componentsContext'\nimport {ThemeContext} from '../contexts/themeContext'\nimport NotificationsContainer from './NotificationsContainer'\n\nexport type DismissNotification = (id: string) => void\n\nexport type Props = {\n    notifications: Notification[]\n    dismissNotification: DismissNotification\n    smallScreenBreakpoint?: number\n    components?: ComponentContextType\n    theme?: Theme\n}\n\nconst NotificationsSystem = (props: Props) => {\n    const smallScreenBreakpoint = props.smallScreenBreakpoint || 768\n    const theme = props.theme\n    const components = props.components || {}\n    const {notifications, dismissNotification} = props\n    const [windowWidth, setWindowWidth] = useState(typeof window === 'undefined' ? 0 : window.innerWidth)\n    const singleContainer = windowWidth < smallScreenBreakpoint\n    // render all notifications in the same container at the top for small screens\n    const positions = singleContainer ? [POSITIONS.topCenter] : Object.values(POSITIONS)\n\n    useEffect(() => {\n        setWindowWidth(window.innerWidth)\n        const updateWindowWidth = () => setWindowWidth(window.innerWidth)\n        // Update window width when the window is resized\n        window.addEventListener('resize', updateWindowWidth)\n        return () => {\n            window.removeEventListener('resize', updateWindowWidth)\n        }\n    }, [])\n\n    return (\n        <ComponentsContext.Provider value={components}>\n            <ThemeContext.Provider value={theme}>\n                <div>\n                    {positions.map((position) => (\n                        <NotificationsContainer\n                            key={position}\n                            position={position}\n                            notifications={notifications.filter(\n                                (notif) => singleContainer || position === notif.position\n                            )}\n                            dismissNotification={dismissNotification}\n                            singleContainer={singleContainer}\n                        />\n                    ))}\n                </div>\n            </ThemeContext.Provider>\n        </ComponentsContext.Provider>\n    )\n}\n\nexport default NotificationsSystem\n","export enum NotificationAction {\n    UpsertNotification = 'reapop/upsertNotification',\n    DismissNotification = 'reapop/dismissNotification',\n    DismissNotifications = 'reapop/dismissNotifications',\n}\n","import {NotificationAction} from './constants'\nimport {DismissNotificationAction, NotificationActions, UpsertNotificationAction} from './actions'\nimport {Notification} from './types'\n\ntype InitReduxAction = {\n    type: string\n}\n\nconst INITIAL_STATE: Notification[] = []\n\nconst notificationsReducer = () => {\n    return (state = INITIAL_STATE, action: NotificationActions | InitReduxAction): Notification[] => {\n        switch (action.type) {\n            case NotificationAction.UpsertNotification: {\n                const payload = (action as UpsertNotificationAction).payload\n                if (~state.findIndex((notif) => notif.id === payload.id)) {\n                    return state.map((notif) => (notif.id === payload.id ? payload : notif))\n                }\n                return [...state, payload]\n            }\n            case NotificationAction.DismissNotification: {\n                const payload = (action as DismissNotificationAction).payload\n                return state.filter((notif) => notif.id !== payload)\n            }\n            case NotificationAction.DismissNotifications:\n                return []\n            default:\n                return state\n        }\n    }\n}\n\nexport default notificationsReducer\n","import {CONFIG, NotificationConfig, STATUSES} from '../constants'\nimport {NewNotification, Notification} from '../reducers/notifications/types'\nimport {clone} from '../utils'\n\nexport const setUpNotifications = (props: Partial<NotificationConfig>) => {\n    for (const key in props) {\n        const propName = key as keyof NotificationConfig\n        CONFIG[propName] = props[propName] as any\n    }\n}\n\nexport const resetNotificationsConfig = () => {\n    CONFIG.defaultProps = {}\n    CONFIG.customizeNotification = null\n    CONFIG.generateId = null\n}\n\nexport const generateId = () => Math.random().toString(36).slice(2, 7)\n\nexport const prepareNotification = (notification: NewNotification): Notification => {\n    const notif = clone(notification)\n    const defaultProps: Partial<Notification> = {\n        ...CONFIG.defaultProps,\n        status: STATUSES.none,\n        buttons: [],\n    }\n\n    if (notif.id === undefined) {\n        notif.id = CONFIG.generateId ? CONFIG.generateId(notification) : generateId()\n    }\n\n    Object.entries(defaultProps).map(([prop, defaultValue]) => {\n        if (notif[prop] === undefined) {\n            notif[prop] = defaultValue\n        }\n    })\n\n    if (typeof CONFIG.customizeNotification === 'function') {\n        CONFIG.customizeNotification(notif)\n    }\n    return notif as Notification\n}\n","import {NotificationAction} from './constants'\nimport {NewNotification, Notification, Status} from './types'\nimport {isObject} from '../../utils'\nimport {prepareNotification} from '../../services/notifications'\n\nexport type UpsertNotificationAction = {\n    type: NotificationAction.UpsertNotification\n    payload: Notification\n}\n\nexport type DismissNotificationAction = {\n    type: NotificationAction.DismissNotification\n    payload: string\n}\n\nexport type DismissNotificationsAction = {\n    type: NotificationAction.DismissNotifications\n}\n\nfunction upsertNotification(notification: Partial<Notification>): UpsertNotificationAction\nfunction upsertNotification(message: string, options?: Partial<Notification>): UpsertNotificationAction\nfunction upsertNotification(message: string, status: Status, options?: Partial<Notification>): UpsertNotificationAction\nfunction upsertNotification(...args: unknown[]): UpsertNotificationAction {\n    const lastArg = args[args.length - 1]\n    let notification: NewNotification = {}\n\n    if (typeof args[0] === 'string') {\n        notification.message = args[0] as string\n    }\n    if (typeof args[1] === 'string') {\n        notification.status = args[1] as Status\n    }\n    if (isObject(lastArg)) {\n        notification = {...notification, ...(lastArg as NewNotification)}\n    }\n\n    return {\n        type: NotificationAction.UpsertNotification,\n        payload: prepareNotification(notification as NewNotification | Notification),\n    }\n}\n\nexport const dismissNotification = (notificationId: string): DismissNotificationAction => ({\n    type: NotificationAction.DismissNotification,\n    payload: notificationId,\n})\n\nexport const dismissNotifications = (): DismissNotificationsAction => ({\n    type: NotificationAction.DismissNotifications,\n})\n\nexport const notify = upsertNotification\n\nexport type NotificationActions = UpsertNotificationAction | DismissNotificationAction | DismissNotificationsAction\n","import {createContext} from 'react'\nimport {NewNotification, Notification} from '../reducers/notifications/types'\n\ntype NotificationsContext = {\n    notifications: Notification[]\n    notify: (notification: NewNotification) => void\n    dismissNotification: (id: string) => void\n    dismissNotifications: () => void\n}\n\nexport const ReapopNotificationsContext = createContext<NotificationsContext>(undefined!)\n","import React from 'react'\nimport {ReactNode, useReducer, useCallback} from 'react'\nimport notificationsReducer from '../reducers/notifications/reducer'\nimport {NewNotification} from '../reducers/notifications/types'\nimport {dismissNotification, dismissNotifications, notify} from '../reducers/notifications/actions'\nimport {ReapopNotificationsContext} from '../contexts/reapopNotificationsContext'\n\ntype Props = {\n    children: ReactNode\n}\n\nexport const NotificationsProvider = (props: Props) => {\n    const [notifications, dispatch] = useReducer(notificationsReducer(), [])\n    const context = {\n        notifications,\n        notify: useCallback(\n            (notification: NewNotification) => {\n                const action = notify(notification)\n                dispatch(action)\n                return action.payload\n            },\n            [dispatch]\n        ),\n        dismissNotification: useCallback((id: string) => dispatch(dismissNotification(id)), [dispatch]),\n        dismissNotifications: useCallback(() => dispatch(dismissNotifications()), [dispatch]),\n    }\n\n    return <ReapopNotificationsContext.Provider value={context}>{props.children}</ReapopNotificationsContext.Provider>\n}\n","import React, {RefObject} from 'react'\nimport {Transition} from 'react-transition-group'\nimport {TransitionProps} from 'react-transition-group/Transition'\n\ntype Props = {\n    duration?: number\n} & Omit<TransitionProps<HTMLElement>, 'addEndListener'>\n\nconst FadeTransition = (props: Props) => {\n    const duration = props.duration || 300\n    const {children, nodeRef, ...otherProps} = props\n    const getNode = () => (nodeRef as RefObject<HTMLElement>).current as HTMLElement\n    // eslint-disable-next-line no-undef\n    const animationProps: KeyframeAnimationOptions = {\n        fill: 'forwards',\n        duration,\n    }\n    const onEnter = () => {\n        getNode().animate([{opacity: 0}, {opacity: 1}], animationProps)\n    }\n    const onExit = () => {\n        getNode().animate(\n            [\n                {\n                    maxHeight: '150px',\n                },\n                {\n                    opacity: 0,\n                    maxHeight: 0,\n                    margin: 0,\n                },\n            ],\n            animationProps\n        )\n    }\n\n    return (\n        <Transition nodeRef={nodeRef} onEnter={onEnter} onExit={onExit} timeout={duration + 100} {...otherProps}>\n            {children}\n        </Transition>\n    )\n}\n\nexport default FadeTransition\n","import React, {RefObject} from 'react'\nimport {Transition} from 'react-transition-group'\nimport {TransitionProps} from 'react-transition-group/Transition'\n\ntype Props = {\n    duration?: number\n} & Omit<TransitionProps<HTMLElement>, 'addEndListener'>\n\nconst GrowTransition = (props: Props) => {\n    const colapseAnimationDuration = 250\n    const duration = props.duration || 300\n    const {children, nodeRef, ...otherProps} = props\n    const getNode = () => (nodeRef as RefObject<HTMLElement>).current as HTMLElement\n    // eslint-disable-next-line no-undef\n    const animationProps: KeyframeAnimationOptions = {\n        fill: 'forwards',\n        duration,\n    }\n    const onEnter = () => {\n        getNode().animate(\n            [\n                {\n                    transform: 'scale(0.6)',\n                    opacity: 0,\n                },\n                {\n                    transform: 'scale(1)',\n                    opacity: 1,\n                },\n            ],\n            animationProps\n        )\n    }\n    const onExit = () => {\n        const hideAnimationDuration = duration\n        getNode().animate([{transform: 'scale(0.6)', opacity: 0}], animationProps)\n        setTimeout(() => {\n            // `150px`: A value higher than the height a notification can have\n            // to create a smooth animation for displayed notifications\n            // when a notification is removed from a container.\n            getNode().animate([{maxHeight: '150px'}, {margin: 0, maxHeight: 0}], {\n                fill: 'forwards',\n                duration: hideAnimationDuration,\n            })\n        }, hideAnimationDuration)\n    }\n\n    return (\n        <Transition\n            nodeRef={nodeRef}\n            onEnter={onEnter}\n            onExit={onExit}\n            timeout={duration + colapseAnimationDuration}\n            {...otherProps}\n        >\n            {children}\n        </Transition>\n    )\n}\n\nexport default GrowTransition\n","import {useContext} from 'react'\nimport {ReapopNotificationsContext} from '../contexts/reapopNotificationsContext'\n\nexport const useNotifications = () => {\n    return useContext(ReapopNotificationsContext)\n}\n","import {CSSProperties} from 'react'\nimport {POSITIONS} from '../constants'\nimport {Position} from '../reducers/notifications/types'\n\nconst containerPerPositionStyles: Record<Position, CSSProperties> = {\n    [POSITIONS.topCenter]: {\n        top: '20px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n    },\n    [POSITIONS.topRight]: {\n        top: '20px',\n        right: '20px',\n    },\n    [POSITIONS.topLeft]: {\n        top: '20px',\n        left: '20px',\n    },\n    [POSITIONS.bottomCenter]: {\n        bottom: '20px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n    },\n    [POSITIONS.bottomRight]: {\n        bottom: '20px',\n        right: '20px',\n    },\n    [POSITIONS.bottomLeft]: {\n        bottom: '20px',\n        left: '20px',\n    },\n}\n\nexport const baseTheme = {\n    container: (position: Position): CSSProperties => ({\n        position: 'fixed',\n        zIndex: 999999,\n        ...containerPerPositionStyles[position],\n    }),\n}\n\nexport default baseTheme\n","import {STATUSES} from '../constants'\nimport {Notification} from '..'\nimport {Theme} from './types'\nimport baseTheme from './base'\n\nconst colorPerStatus = {\n    [STATUSES.none]: '#ffffff',\n    [STATUSES.info]: '#4192ff',\n    [STATUSES.loading]: '#4192ff',\n    [STATUSES.success]: '#32d38b',\n    [STATUSES.warning]: '#f5aa0a',\n    [STATUSES.error]: '#E94C58',\n}\nconst lineHeight = 1.428571429\n\nexport const atalhoTheme: Theme = {\n    ...baseTheme,\n    notification: (notification: Notification) => ({\n        display: 'flex',\n        width: '350px',\n        height: '100%',\n        position: 'relative',\n        borderRadius: '5px',\n        border: '1px solid rgba(0,0,0,.1)',\n        boxShadow: '0 3px 8px 2px rgba(0, 0, 0, 0.3)',\n        backgroundColor: '#2f2f36',\n        color: '#ffffff',\n        marginBottom: '20px',\n        cursor: notification.dismissible && !notification.showDismissButton ? 'pointer' : '',\n        zIndex: 999,\n    }),\n    notificationIcon: (notification: Notification) => ({\n        display: notification.image ? 'none' : 'flex',\n        width: '20px',\n        height: '20px',\n        boxSizing: 'border-box',\n        margin: '10px 0 10px 15px',\n        alignSelf: 'flex-start',\n        flexShrink: 0,\n        color: colorPerStatus[notification.status],\n    }),\n    notificationDismissIcon: () => ({\n        width: '12px',\n        height: '12px',\n        margin: '14px 10px',\n        cursor: 'pointer',\n        color: '#b9c2cb',\n        flexShrink: 0,\n    }),\n    notificationMeta: () => ({\n        verticalAlign: 'top',\n        boxSizing: 'border-box',\n        width: '100%',\n        padding: '10px 20px',\n    }),\n    notificationTitle: (notification) => ({\n        margin: notification.message ? '0 0 10px' : 0,\n        fontSize: '14px',\n        color: '#ffffff',\n        fontWeight: 700,\n        lineHeight,\n    }),\n    notificationMessage: () => ({\n        margin: 0,\n        fontSize: '14px',\n        color: '#b9c2cb',\n        lineHeight,\n    }),\n    notificationImageContainer: () => ({\n        boxSizing: 'border-box',\n        padding: '10px 0 10px 15px',\n    }),\n    notificationImage: () => ({\n        display: 'inline-flex',\n        borderRadius: '40px',\n        width: '40px',\n        height: '40px',\n        backgroundSize: 'cover',\n    }),\n    notificationButtons: () => ({}),\n    notificationButton: (\n        notification: Notification,\n        position: number,\n        state: {isHovered: boolean; isActive: boolean}\n    ) => ({\n        display: 'block',\n        width: '100%',\n        height: `${100 / notification.buttons.length}%`,\n        minHeight: '40px',\n        boxSizing: 'border-box',\n        padding: 0,\n        background: '#2f2f36',\n        border: 'none',\n        borderRadius: 0,\n        borderLeft: '1px solid #464c5f',\n        outline: 'none',\n        textAlign: 'center',\n        color: state.isHovered || state.isActive ? '#349ef3' : '#ffffff',\n        cursor: 'pointer',\n        borderTop: position === 1 ? '1px solid #464c5f' : 'none',\n    }),\n    notificationButtonText: () => ({\n        display: 'block',\n        height: '25px',\n        padding: '0 15px',\n        minWidth: '90px',\n        maxWidth: '150px',\n        width: 'auto',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        margin: '0 auto',\n        textOverflow: 'ellipsis',\n        textAlign: 'center',\n        fontSize: '14px',\n        lineHeight: '25px',\n    }),\n}\n\nexport default atalhoTheme\n","import {STATUSES} from '../constants'\nimport {Notification} from '../reducers/notifications/types'\nimport {Theme} from './types'\nimport baseTheme from './base'\n\nconst colorPerStatus = {\n    [STATUSES.none]: '#ffffff',\n    [STATUSES.info]: '#349ef3',\n    [STATUSES.loading]: '#349ef3',\n    [STATUSES.success]: '#4dc657',\n    [STATUSES.warning]: '#f5aa0a',\n    [STATUSES.error]: '#f5311d',\n}\nconst lineHeight = 1.428571429\n\nexport const wyboTheme: Theme = {\n    ...baseTheme,\n    notification: (notification: Notification) => ({\n        display: 'flex',\n        width: '370px',\n        height: '100%',\n        position: 'relative',\n        borderRadius: '8px',\n        border: 'none',\n        boxShadow: '0 1px 3px -1px rgba(0, 0, 0, 0.3)',\n        zIndex: 999,\n        backgroundColor: '#ffffff',\n        color: '#524c4c',\n        borderLeft: '2px solid',\n        marginBottom: '20px',\n        borderLeftColor: colorPerStatus[notification.status],\n        cursor: notification.dismissible && !notification.showDismissButton ? 'pointer' : '',\n    }),\n    notificationIcon: (notification: Notification) => ({\n        display: notification.image ? 'none' : 'flex',\n        width: '20px',\n        height: '20px',\n        boxSizing: 'border-box',\n        margin: '10px 0 10px 15px',\n        alignSelf: 'flex-start',\n        flexShrink: 0,\n        color: colorPerStatus[notification.status],\n    }),\n    notificationDismissIcon: () => ({\n        width: '12px',\n        height: '12px',\n        margin: '14px 10px',\n        cursor: 'pointer',\n        color: '#524c4c',\n        flexShrink: 0,\n    }),\n    notificationMeta: () => ({\n        verticalAlign: 'top',\n        boxSizing: 'border-box',\n        width: '100%',\n        padding: '10px 20px',\n    }),\n    notificationTitle: (notification) => ({\n        margin: notification.message ? '0 0 10px' : 0,\n        fontSize: '14px',\n        fontWeight: 700,\n        lineHeight,\n    }),\n    notificationMessage: () => ({\n        margin: 0,\n        fontSize: '14px',\n        lineHeight,\n    }),\n    notificationImageContainer: () => ({\n        boxSizing: 'border-box',\n        padding: '10px 0 10px 15px',\n    }),\n    notificationImage: () => ({\n        display: 'inline-flex',\n        borderRadius: '40px',\n        width: '40px',\n        height: '40px',\n        backgroundSize: 'cover',\n    }),\n    notificationButtons: () => ({}),\n    notificationButton: (\n        notification: Notification,\n        position: number,\n        state: {isHovered: boolean; isActive: boolean}\n    ) => ({\n        display: 'block',\n        width: '100%',\n        height: `${100 / notification.buttons.length}%`,\n        minHeight: '40px',\n        boxSizing: 'border-box',\n        padding: 0,\n        background: 'none',\n        border: 'none',\n        borderRadius: 0,\n        borderLeft: '1px solid rgba(0, 0, 0, 0.09)',\n        outline: 'none',\n        textAlign: 'center',\n        color: state.isHovered ? '#349ef3' : state.isActive ? '#228ee5' : '#524c4c',\n        cursor: 'pointer',\n        borderTop: position === 1 ? '1px solid rgba(0, 0, 0, 0.09)' : 'none',\n    }),\n    notificationButtonText: () => ({\n        display: 'block',\n        height: '25px',\n        padding: '0 15px',\n        minWidth: '90px',\n        maxWidth: '150px',\n        width: 'auto',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        margin: '0 auto',\n        textOverflow: 'ellipsis',\n        textAlign: 'center',\n        fontSize: '14px',\n        lineHeight: '25px',\n    }),\n}\n\nexport default wyboTheme\n","import {STATUSES} from '../constants'\nimport {Notification} from '..'\nimport {Theme} from './types'\nimport baseTheme from './base'\n\nconst colorPerStatus = {\n    [STATUSES.none]: '#ffffff',\n    [STATUSES.info]: '#007bff',\n    [STATUSES.loading]: '#007bff',\n    [STATUSES.success]: '#28a745',\n    [STATUSES.warning]: '#ffc107',\n    [STATUSES.error]: '#dc3545',\n}\nconst lineHeight = 1.428571429\n\nexport const bootstrapTheme: Theme = {\n    ...baseTheme,\n    notification: (notification: Notification) => ({\n        display: 'flex',\n        width: '350px',\n        height: '100%',\n        position: 'relative',\n        borderRadius: '4px',\n        border: '1px solid rgba(0,0,0,.1)',\n        boxShadow: '0 0.25rem 0.75rem rgba(0,0,0,.1)',\n        zIndex: 999,\n        backgroundColor: '#ffffff',\n        color: '#524c4c',\n        marginBottom: '20px',\n        cursor: notification.dismissible && !notification.showDismissButton ? 'pointer' : '',\n    }),\n    notificationIcon: (notification: Notification) => ({\n        display: notification.image ? 'none' : 'flex',\n        width: '20px',\n        height: '20px',\n        boxSizing: 'border-box',\n        margin: '10px 0 10px 15px',\n        alignSelf: 'flex-start',\n        flexShrink: 0,\n        color: colorPerStatus[notification.status],\n    }),\n    notificationDismissIcon: () => ({\n        width: '12px',\n        height: '12px',\n        margin: '14px 10px',\n        cursor: 'pointer',\n        color: '#524c4c',\n        flexShrink: 0,\n    }),\n    notificationMeta: () => ({\n        verticalAlign: 'top',\n        boxSizing: 'border-box',\n        width: '100%',\n        padding: '10px 20px',\n    }),\n    notificationTitle: (notification) => ({\n        margin: notification.message ? '0 0 10px' : 0,\n        fontSize: '14px',\n        color: '#6c757d',\n        fontWeight: 700,\n        lineHeight,\n    }),\n    notificationMessage: () => ({\n        margin: 0,\n        fontSize: '14px',\n        color: '#212529',\n        lineHeight,\n    }),\n    notificationImageContainer: () => ({\n        boxSizing: 'border-box',\n        padding: '10px 0 10px 15px',\n    }),\n    notificationImage: () => ({\n        display: 'inline-flex',\n        borderRadius: '40px',\n        width: '40px',\n        height: '40px',\n        backgroundSize: 'cover',\n    }),\n    notificationButtons: () => ({}),\n    notificationButton: (\n        notification: Notification,\n        position: number,\n        state: {isHovered: boolean; isActive: boolean}\n    ) => ({\n        display: 'block',\n        width: '100%',\n        height: `${100 / notification.buttons.length}%`,\n        minHeight: '40px',\n        boxSizing: 'border-box',\n        padding: 0,\n        background: 'none',\n        border: 'none',\n        borderRadius: 0,\n        borderLeft: '1px solid rgba(0,0,0,.1)',\n        outline: 'none',\n        textAlign: 'center',\n        color: state.isHovered || state.isActive ? '#007bff' : '#212529',\n        cursor: 'pointer',\n        borderTop: position === 1 ? '1px solid rgba(0, 0, 0, 0.09)' : 'none',\n    }),\n    notificationButtonText: () => ({\n        display: 'block',\n        height: '25px',\n        padding: '0 15px',\n        minWidth: '90px',\n        maxWidth: '150px',\n        width: 'auto',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        margin: '0 auto',\n        textOverflow: 'ellipsis',\n        textAlign: 'center',\n        fontSize: '14px',\n        lineHeight: '25px',\n    }),\n}\n\nexport default bootstrapTheme\n","import NotificationsSystem from './components/NotificationsSystem'\nimport {NotificationsProvider} from './components/NotificationsProvider'\nimport {STATUSES, POSITIONS} from './constants'\nimport {notify, dismissNotifications, dismissNotification} from './reducers/notifications/actions'\nimport FadeTransition from './components/FadeTransition'\nimport SlideTransition from './components/SlideTransition'\nimport GrowTransition from './components/GrowTransition'\nimport reducer from './reducers/notifications/reducer'\nimport {useNotifications} from './hooks/useNotifications'\nimport baseTheme from './themes/base'\nimport atalhoTheme from './themes/atalho'\nimport wyboTheme from './themes/wybo'\nimport bootstrapTheme from './themes/bootstrap'\n\nimport {Theme} from './themes/types'\nimport {setUpNotifications} from './services/notifications'\n\nexport {\n    // themes\n    baseTheme,\n    atalhoTheme,\n    wyboTheme,\n    bootstrapTheme,\n    // utils\n    setUpNotifications,\n    useNotifications,\n    // constants\n    STATUSES,\n    POSITIONS,\n    //reducers\n    reducer,\n    // actions\n    notify,\n    dismissNotifications,\n    dismissNotification,\n    // components\n    FadeTransition,\n    SlideTransition,\n    GrowTransition,\n    NotificationsProvider,\n}\n\n// types\nexport * from './reducers/notifications/types'\nexport type {Theme}\n\nexport default NotificationsSystem\n"],"names":["CONFIG","defaultProps","customizeNotification","generateId","STATUSES","Object","freeze","none","info","success","loading","warning","error","POSITIONS","topCenter","topLeft","topRight","bottomCenter","bottomLeft","bottomRight","classnamePrefix","classnames","container","position","singleContainer","classes","push","notification","status","buttons","length","dismissible","notificationIcon","notificationImageContainer","notificationImage","notificationDismissIcon","notificationMeta","notificationTitle","notificationMessage","notificationButtons","notificationButton","notificationButtonText","ComponentsContext","createContext","ThemeContext","undefined","useTheme","useContext","Timer","delay","callback","remainingTime","pause","clearTimeout","this","timerId","Date","getTime","start","resume","setTimeout","clone","origObject","Array","isArray","map","value","newObject","key","isObject","constructor","noop","useComponentsContext","SlideTransition","props","duration","children","nodeRef","otherProps","getNode","current","transformDirection","includes","transformValue","animationProps","fill","React","Transition","onEnter","animate","transform","opacity","onExit","hideAnimationDuration","maxHeight","margin","timeout","NotificationIcon","theme","iconProps","style","className","viewBox","fillRule","d","attributeType","attributeName","type","from","to","dur","repeatCount","NotificationDismissIcon","dismissNotification","styles","onClick","NotificationButton","button","useState","isHovered","setIsHovered","setIsActive","state","isActive","buttonStyles","buttonTextStyles","onMouseLeave","onMouseEnter","onMouseDown","onMouseUp","primary","name","NotificationImage","containerStyles","imageStyles","backgroundImage","image","Notification","dismiss","components","id","title","message","showDismissButton","allowHTML","wrapperClassname","wrapperStyles","metaStyles","titleStyles","messageStyles","Icon","role","join","dangerouslySetInnerHTML","__html","index","NotificationContainer","transitionProps","dismissAfter","onAdd","onDismiss","NotificationComponent","timer","setTimer","useRef","useEffect","ref","NotificationsContainer","classname","notifications","slice","reverse","TransitionGroup","component","NotificationsSystem","smallScreenBreakpoint","window","innerWidth","setWindowWidth","positions","values","updateWindowWidth","addEventListener","removeEventListener","Provider","filter","notif","NotificationAction","INITIAL_STATE","notificationsReducer","action","UpsertNotification","payload","findIndex","DismissNotification","DismissNotifications","setUpNotifications","resetNotificationsConfig","Math","random","toString","prepareNotification","entries","prop","upsertNotification","lastArg","arguments","notificationId","dismissNotifications","notify","ReapopNotificationsContext","NotificationsProvider","useReducer","dispatch","context","useCallback","FadeTransition","GrowTransition","useNotifications","containerPerPositionStyles","top","left","right","bottom","baseTheme","zIndex","colorPerStatus","lineHeight","atalhoTheme","display","width","height","borderRadius","border","boxShadow","backgroundColor","color","marginBottom","cursor","boxSizing","alignSelf","flexShrink","verticalAlign","padding","fontSize","fontWeight","backgroundSize","minHeight","background","borderLeft","outline","textAlign","borderTop","minWidth","maxWidth","whiteSpace","overflow","textOverflow","wyboTheme","borderLeftColor","bootstrapTheme"],"mappings":"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"}